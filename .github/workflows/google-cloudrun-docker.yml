name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "master" ]
    paths:
      - 'test1/**'  # Trigger on changes within test1 directory and subdirectories
      - 'test2/**'  # Trigger on changes within test2 directory and subdirectories

env:
  PROJECT_ID: prj-airindia-poc-01 # TODO: update Google Cloud project id
  GAR_LOCATION: asia-south1 Â # TODO: update Artifact Registry location
  REGION: asia-south1 # TODO: update Cloud Run service region

jobs:
  deploy:

    runs-on: ubuntu-latest
  
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/13579727091/locations/global/workloadIdentityPools/github-wif-pool/providers/githubwif' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: 'sql-poc@prj-airindia-poc-01.iam.gserviceaccount.com' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
          access_token_lifetime: '300s'

######## working yaml################

      ### - id: "auth"  # Commented out as using workload identity federation
      #   uses: google-github-actions/auth@v1.1.1
      #   with:
      #     credentials_json: "${{ secrets.SA }}"

      ### Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      ###working suhas
      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # Optional conditional build step (comment out if not needed)
      - name: Check for changes in test1 or test2
        run: |
          git diff --name-only HEAD^ HEAD | grep -E "(test1|test2)/" > changed_files.txt
          if [ -z "$(cat changed_files.txt)" ]; then
            exit 0  # No changes in test1 or test2, skip build steps
          fi

      - name: Build and Push Container (if changes in test1 or test2)
        if: steps.check-for-changes.outputs == 1  # Check script exit code (optional)
        run: |-
          # Build and push for test1 (modify paths and image tags as needed)
          docker build -t "asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/test1:${{ github.sha }}" ./test1
          docker push "asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/test1:${{ github.sha }}"

          # Repeat for test2 if needed, adjusting paths and image tags accordingly
