name: Build and Deploy to Cloud Run

on:
  push:
    paths:
      - 'test1/**'
      - 'test2/**'
      - '/**' 
  pull_request:
    branches:
      - master

env:
  PROJECT_ID: prj-airindia-poc-01 # TODO: update Google Cloud project id
  GAR_LOCATION: asia-south1  # TODO: update Artifact Registry location
  REGION: asia-south1 # TODO: update Cloud Run service region

jobs:
  deploy:
    runs-on: ubuntu-latest
  
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            test1:
              - 'test1/**'   
            test2:
              - 'test2/**'   

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/13579727091/locations/global/workloadIdentityPools/github-wif-pool/providers/githubwif' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: 'sql-poc@prj-airindia-poc-01.iam.gserviceaccount.com' # e.g. - my-service-account@my-project.iam.gserviceaccount.com
          access_token_lifetime: '300s'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Debug step
        run: echo "Build step triggered!"

      - name: Build and Push Container (test1 or test2)
        if: startsWith(github.event_path, 'test1/') || startsWith(github.event_path, 'test2/')
        run: |-
          docker build --no-cache -t "asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/${{ github.event.repository.name }}:${{ github.sha }}" ./
          docker push "asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/${{ github.event.repository.name }}:${{ github.sha }}"



      # # # END - Docker auth and build

      # - name: Deploy to VM
      #   id: 'compute-ssh'
      #   uses: 'google-github-actions/ssh-compute@v1'
      #   with:
      #     instance_name: 'docker-cicd'
      #     zone: 'asia-south1-c'
      #     ssh_private_key: '${{ secrets.GCP_SSH_PRIVATE_KEY }}'
      #     command: |
      #       # sudo docker stop $(sudo docker ps -aq)
      #       # sudo docker rm $(sudo docker ps -aq)
      #       sudo docker stop app-1
      #       sudo docker rm app-1
      #       sudo docker rmi $(sudo docker images -q)
      #       sudo docker pull asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/test:${{ github.sha }}
      #       sudo docker pull asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/test2:${{ github.sha }}
      #       sudo docker pull asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/test3:${{ github.sha }}
      #       sudo docker run --name app-1 -d -p 8080:8080 asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/test:${{ github.sha }}
      #       sudo docker run --name app-2 -d -p 8080:8080 asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/test2:${{ github.sha }}
      #       sudo docker run --name app-3 -d -p 8080:8080 asia-south1-docker.pkg.dev/prj-airindia-poc-01/cloud-run-source-deploy/test3:${{ github.sha }}
          
        

      # # # If required, use the Cloud Run url output in later steps
      # - name: Show Output
      #   run: |-
      #     echo '${{ steps.compute-ssh.outputs.stdout }}'
      #     echo '${{ steps.compute-ssh.outputs.stderr }}' 
